{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/all-material/all-material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/common/access-token-timer/access-token-timer.component.css","webpack:///./src/app/components/common/access-token-timer/access-token-timer.component.html","webpack:///./src/app/components/common/access-token-timer/access-token-timer.component.ts","webpack:///./src/app/components/common/error-dialog/error-dialog.component.css","webpack:///./src/app/components/common/error-dialog/error-dialog.component.html","webpack:///./src/app/components/common/error-dialog/error-dialog.component.ts","webpack:///./src/app/components/common/index.ts","webpack:///./src/app/components/common/object-viewer/object-viewer.component.css","webpack:///./src/app/components/common/object-viewer/object-viewer.component.html","webpack:///./src/app/components/common/object-viewer/object-viewer.component.ts","webpack:///./src/app/components/common/request-response-log/request-response-log.component.css","webpack:///./src/app/components/common/request-response-log/request-response-log.component.html","webpack:///./src/app/components/common/request-response-log/request-response-log.component.ts","webpack:///./src/app/components/common/resources-menu/resources-menu.component.css","webpack:///./src/app/components/common/resources-menu/resources-menu.component.html","webpack:///./src/app/components/common/resources-menu/resources-menu.component.ts","webpack:///./src/app/components/common/smart-common.module.ts","webpack:///./src/app/components/misc-pages/access-token/access-token.component.css","webpack:///./src/app/components/misc-pages/access-token/access-token.component.html","webpack:///./src/app/components/misc-pages/access-token/access-token.component.ts","webpack:///./src/app/components/misc-pages/conformance/conformance.component.css","webpack:///./src/app/components/misc-pages/conformance/conformance.component.html","webpack:///./src/app/components/misc-pages/conformance/conformance.component.ts","webpack:///./src/app/components/misc-pages/connect/connect.component.css","webpack:///./src/app/components/misc-pages/connect/connect.component.html","webpack:///./src/app/components/misc-pages/connect/connect.component.ts","webpack:///./src/app/components/misc-pages/index.ts","webpack:///./src/app/components/misc-pages/index/index.component.css","webpack:///./src/app/components/misc-pages/index/index.component.html","webpack:///./src/app/components/misc-pages/index/index.component.ts","webpack:///./src/app/components/misc-pages/launch/launch.component.css","webpack:///./src/app/components/misc-pages/launch/launch.component.html","webpack:///./src/app/components/misc-pages/launch/launch.component.ts","webpack:///./src/app/components/misc-pages/misc-pages-routing.module.ts","webpack:///./src/app/components/misc-pages/misc-pages.module.ts","webpack:///./src/app/components/misc-pages/redirect/redirect.component.css","webpack:///./src/app/components/misc-pages/redirect/redirect.component.html","webpack:///./src/app/components/misc-pages/redirect/redirect.component.ts","webpack:///./src/app/components/misc-pages/state/state.component.css","webpack:///./src/app/components/misc-pages/state/state.component.html","webpack:///./src/app/components/misc-pages/state/state.component.ts","webpack:///./src/app/components/misc-pages/user-profile/user-profile.component.css","webpack:///./src/app/components/misc-pages/user-profile/user-profile.component.html","webpack:///./src/app/components/misc-pages/user-profile/user-profile.component.ts","webpack:///./src/app/components/resources/edit-resource/edit-resource.component.css","webpack:///./src/app/components/resources/edit-resource/edit-resource.component.html","webpack:///./src/app/components/resources/edit-resource/edit-resource.component.ts","webpack:///./src/app/components/resources/index.ts","webpack:///./src/app/components/resources/patient/patient.component.css","webpack:///./src/app/components/resources/patient/patient.component.html","webpack:///./src/app/components/resources/patient/patient.component.ts","webpack:///./src/app/components/resources/resources-routing.module.ts","webpack:///./src/app/components/resources/resources-table-container/resources-table-container.component.css","webpack:///./src/app/components/resources/resources-table-container/resources-table-container.component.html","webpack:///./src/app/components/resources/resources-table-container/resources-table-container.component.ts","webpack:///./src/app/components/resources/resources-table/resources-table.component.css","webpack:///./src/app/components/resources/resources-table/resources-table.component.html","webpack:///./src/app/components/resources/resources-table/resources-table.component.ts","webpack:///./src/app/components/resources/resources.module.ts","webpack:///./src/app/data/client-apps.ts","webpack:///./src/app/data/fhir-servers.ts","webpack:///./src/app/misc/auth-guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/client-app.service.ts","webpack:///./src/app/services/fhir-server.service.ts","webpack:///./src/app/services/global.service.ts","webpack:///./src/app/services/helper.service.ts","webpack:///./src/app/services/index.ts","webpack:///./src/app/services/smart.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatOptionModule,\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatCommonModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatFormFieldModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatLineModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatPseudoCheckboxModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatOptionModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatCommonModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatLineModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatPseudoCheckboxModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule\r\n  ],\r\n  exports: [\r\n    MatOptionModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatCommonModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatLineModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatPseudoCheckboxModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class AllMaterialModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AuthGaurd } from './misc/auth-guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/index', pathMatch: 'full' },\r\n];\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  declarations: [],\r\n  providers: [AuthGaurd],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \".side-nav-container {\\r\\n    position: absolute;\\r\\n    top: 60px;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n}\\r\\n\\r\\n.float-right {\\r\\n    float: right;\\r\\n}\\r\\n\\r\\n.card-no-data {\\r\\n    min-height: 300px;\\r\\n}\\r\\n\\r\\n.center {\\r\\n    margin: auto;\\r\\n}\"","module.exports = \"<div>\\r\\n  <mat-toolbar color=\\\"primary\\\">\\r\\n    <button *ngIf=\\\"isLoggedIn$ | async\\\" mat-icon-button (click)=\\\"snav.toggle()\\\">\\r\\n      <mat-icon>menu</mat-icon>\\r\\n    </button>\\r\\n    <span>Sample FHIR Application using Angular and SMART Javascript Client Library</span>\\r\\n    <span class=\\\"spacer\\\"></span>\\r\\n    <app-access-token-timer></app-access-token-timer>\\r\\n    <span class=\\\"min-padding\\\">\\r\\n      <button mat-raised-button (click)=\\\"requestResponseLog.toggle();\\\">Request Response Logs</button>\\r\\n    </span>\\r\\n    <span class=\\\"min-padding\\\" *ngIf=\\\"isLoggedIn$ | async\\\">\\r\\n      <button mat-raised-button color=\\\"warn\\\" *ngIf=\\\"canSwitchPatient\\\" (click)=\\\"switchPatient();snav.toggle();\\\">Switch Patient</button>\\r\\n    </span>\\r\\n    <span class=\\\"min-padding\\\">\\r\\n      <button mat-raised-button color=\\\"warn\\\" *ngIf=\\\"isLoggedIn$ | async\\\" (click)=\\\"logout();snav.toggle();\\\">Signout</button>\\r\\n    </span>\\r\\n  </mat-toolbar>\\r\\n  <mat-sidenav-container class=\\\"side-nav-container\\\">\\r\\n    <mat-sidenav #snav mode=\\\"side\\\" opened=\\\"false\\\">\\r\\n      <mat-nav-list *ngIf=\\\"isLoggedIn$ | async\\\">\\r\\n        <a routerLink=\\\"/conformance\\\" mat-list-item>Conformance</a>\\r\\n        <a routerLink=\\\"/state\\\" mat-list-item>State</a>\\r\\n        <a routerLink=\\\"/token\\\" mat-list-item>Access Token</a>\\r\\n        <a routerLink=\\\"/user-profile\\\" mat-list-item>User Profile</a>\\r\\n        <app-resources-menu></app-resources-menu>\\r\\n      </mat-nav-list>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav #requestResponseLog opened=\\\"false\\\" mode=\\\"side\\\" position=\\\"end\\\">\\r\\n      <app-request-response-log></app-request-response-log>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content>\\r\\n      <div>\\r\\n        <div class=\\\"container\\\">\\r\\n          <router-outlet></router-outlet>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-sidenav-content>\\r\\n  </mat-sidenav-container>\\r\\n</div>\"","\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Component, OnInit, NgZone, AfterViewChecked, DoCheck, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material';\r\nimport { AuthService, GlobalService, SmartService } from './services';\r\nimport { ErrorDialogComponent } from './components/common/error-dialog/error-dialog.component';\r\n\r\n/**\r\n * Root Application Component\r\n */\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * Async Observable used in the template to identify whether a user has logged in or not.\r\n   */\r\n  isLoggedIn$: Observable<boolean>;\r\n\r\n  /**\r\n   * Flag based on which the Switch Patient button is displayed on the Header\r\n   * This is decided based on whether the current application scopes contains the scope 'launch/patient'\r\n   */\r\n  canSwitchPatient: boolean;\r\n\r\n  /**\r\n    * @ignore\r\n    */\r\n  private _unsubscribe = new Subject<void>();\r\n\r\n  constructor(\r\n    private _zone: NgZone,\r\n    private _router: Router,\r\n    private _dialog: MatDialog,\r\n    private _authService: AuthService,\r\n    private _globalService: GlobalService,\r\n    private _smartService: SmartService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Ensure the components are destroyed and initialized again when the routes change\r\n    this._router.routeReuseStrategy.shouldReuseRoute = function () {\r\n      return false;\r\n    };\r\n\r\n    this.isLoggedIn$ = this._authService.isLoggedIn;\r\n\r\n    // Open the Common Error Dialog screen, whenever an error has been reported anywhere in the applciation\r\n    this._globalService.getError()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(error => {\r\n        if (error) {\r\n          this._zone.run(() => {\r\n            this.openErrorDialog(error);\r\n          });\r\n        }\r\n      });\r\n\r\n    // Determining if the application has the 'launch/patient' scope\r\n    this.isLoggedIn$.subscribe(isLoggedIn => {\r\n      if (isLoggedIn) {\r\n        this._smartService.getClient()\r\n          .takeUntil(this._unsubscribe)\r\n          .subscribe(smartClient => {\r\n            this._zone.run(() => {\r\n              this.canSwitchPatient = smartClient.state.client.scope.indexOf('launch/patient') !== -1;\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Called by the Logout button on the header\r\n   */\r\n  logout() {\r\n    this._authService.logout();\r\n  }\r\n\r\n  /**\r\n   * Called by the Switch Patient button on the header\r\n   */\r\n  switchPatient() {\r\n    this._authService.logout();\r\n    this._smartService.getClient()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(smartClient => {\r\n        this._zone.run(() => {\r\n          // Initiates the OAuth2.0 workflow, so that the user can select another record.\r\n          const oauth2Configuration = smartClient.state;\r\n          FHIR.oauth2.authorize(oauth2Configuration);\r\n        });\r\n      });\r\n  }\r\n\r\n  openErrorDialog(error: any) {\r\n    const dialogRef = this._dialog.open(ErrorDialogComponent, {\r\n      minHeight: 700,\r\n      minWidth: 800,\r\n      data: { error: error }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe.next();\r\n    this._unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","import 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/takeUntil';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\r\nimport { AceEditorModule } from 'ng2-ace-editor';\r\nimport { AppComponent } from './app.component';\r\nimport { AllMaterialModule } from './all-material/all-material.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MiscPagesModule } from './components/misc-pages/misc-pages.module';\r\nimport { ResourcesModule } from './components/resources/resources.module';\r\nimport { SmartCommonModule } from './components/common/smart-common.module';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    AllMaterialModule,\r\n    NgxJsonViewerModule,\r\n    AceEditorModule,\r\n    SmartCommonModule,\r\n    MiscPagesModule,\r\n    ResourcesModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<span *ngIf=\\\"timeLeft>0\\\">\\r\\n  Access Token: {{timeLeft}} s\\r\\n</span>\\r\\n<span *ngIf=\\\"(isLoggedIn$ | async) && (!timeLeft || timeLeft<=0)\\\">\\r\\n  Access token has expired.\\r\\n</span>\\r\\n<span *ngIf=\\\"isLoggedIn$ | async\\\" class=\\\"min-padding\\\">\\r\\n  <button mat-raised-button color=\\\"warn\\\" *ngIf=\\\"canRefresh\\\" (click)=\\\"refreshAccessToken()\\\">Refresh Access Token</button>\\r\\n</span>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { SmartService } from '../../../services';\r\n\r\n/**\r\n * Displays the Time left for the Access Token in context.\r\n * Shows the Refresh Token button, if there is a refresh_token in the Token Response from the FHIR server.\r\n */\r\n@Component({\r\n  selector: 'app-access-token-timer',\r\n  templateUrl: './access-token-timer.component.html',\r\n  styleUrls: ['./access-token-timer.component.css']\r\n})\r\nexport class AccessTokenTimerComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * Access Token validity time displayed in seconds\r\n   */\r\n  timeLeft: Number;\r\n\r\n  /**\r\n   * Async Observable used to identify is a user is logged in.\r\n   */\r\n  isLoggedIn$: Observable<boolean>;\r\n\r\n  /**\r\n   * Flag used to identify, if there is a refresh_token in the Token Response from the FHIR Server.\r\n   */\r\n  canRefresh: boolean;\r\n\r\n  private _unsubscribe = new Subject<void>();\r\n\r\n  constructor(private _authService: AuthService, private _smartService: SmartService, private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.isLoggedIn$ = this._authService.isLoggedIn;\r\n\r\n    if (this._smartService.getRefreshToken()) {\r\n      this.canRefresh = true;\r\n    }\r\n\r\n    this._smartService.getTimeLeft()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(timeLeft => {\r\n        if (this._smartService.getRefreshToken()) {\r\n          this.canRefresh = true;\r\n        }\r\n        this.timeLeft = timeLeft;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Called by the Refresh Token button, which initiates the OAuth2.0 Refresh token workflow.\r\n   */\r\n  refreshAccessToken() {\r\n    this._smartService.refreshAccessToken();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe.next();\r\n    this._unsubscribe.complete();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div mat-dialog-content>\\r\\n  <app-object-viewer *ngIf=\\\"data\\\" title=\\\"Error\\\" [value]=\\\"data\\\" hideView=\\\"true\\\"></app-object-viewer>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-raised-button  color=\\\"warn\\\" (click)=\\\"close()\\\">Close</button>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { GlobalService } from '../../../services/global.service';\r\n\r\n/**\r\n * Dialog component to show the global error set using the Global Service\r\n */\r\n@Component({\r\n  selector: 'app-error-dialog',\r\n  templateUrl: './error-dialog.component.html',\r\n  styleUrls: ['./error-dialog.component.css']\r\n})\r\nexport class ErrorDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<ErrorDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private _globalService: GlobalService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * Called by the Close button, which clears the error in the Global service.\r\n   */\r\n  close() {\r\n    this.dialogRef.close();\r\n    this._globalService.setError(null);\r\n  }\r\n\r\n}\r\n","export * from './access-token-timer/access-token-timer.component';\r\nexport * from './error-dialog/error-dialog.component';\r\nexport * from './object-viewer/object-viewer.component';\r\nexport * from './resources-menu/resources-menu.component';\r\n","module.exports = \"\"","module.exports = \"<mat-card class=\\\"mat-elevation-z8\\\">\\r\\n  <mat-card-title>\\r\\n    <div>{{title}}</div>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <mat-tab-group>\\r\\n      <mat-tab label=\\\"View\\\" *ngIf=\\\"!hideView\\\">\\r\\n        <ngx-json-viewer *ngIf=\\\"value\\\" [json]=\\\"value\\\"></ngx-json-viewer>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"JSON\\\">\\r\\n        <ace-editor [text]=\\\"codeValue\\\" style=\\\"height:500px;\\\" [theme]=\\\"'eclipse'\\\"></ace-editor>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n/**\r\n * Display any object passed to is as\r\n * 1. JSON - in the ACE Editor\r\n * 2. Pretty View - in the JSON Viewer\r\n */\r\n@Component({\r\n  selector: 'app-object-viewer',\r\n  templateUrl: './object-viewer.component.html',\r\n  styleUrls: ['./object-viewer.component.css']\r\n})\r\nexport class ObjectViewerComponent implements OnInit {\r\n\r\n  /**\r\n   * Object to be displayed\r\n   */\r\n  @Input() value: any;\r\n\r\n  /**\r\n   * Title to be displayed\r\n   */\r\n  @Input() title: string;\r\n\r\n  /**\r\n   * Flag to hide the Pretty View\r\n   */\r\n  @Input() hideView: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * Getter method used by the Ace Editor to get the value of the object.\r\n   */\r\n  get codeValue() {\r\n    return JSON.stringify(this.value, null, 2);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"min-padding\\\" style=\\\"float: right;\\\">\\r\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"clearLogs()\\\">Cleare Logs</button>\\r\\n</div>\\r\\n<mat-accordion>\\r\\n  <mat-expansion-panel expanded>\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        Request Response Log\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        Log of all the FHIR API requests made by this app.\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n    <div>\\r\\n      <div *ngFor=\\\"let log of logs\\\">\\r\\n        <mat-accordion>\\r\\n          <mat-expansion-panel>\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                {{log.request.method}} {{log.response.status}} {{log.request.url}}\\r\\n              </mat-panel-title>\\r\\n            </mat-expansion-panel-header>\\r\\n            <div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <mat-tab-group>\\r\\n                    <mat-tab label=\\\"Body\\\">\\r\\n                      <ace-editor [text]=\\\"log.request.body\\\" style=\\\"height:500px;\\\" [theme]=\\\"'eclipse'\\\"></ace-editor>\\r\\n                    </mat-tab>\\r\\n                    <mat-tab label=\\\"Headers\\\">\\r\\n                      <ace-editor [text]=\\\"log.request.headers\\\" style=\\\"height:500px;\\\" [theme]=\\\"'eclipse'\\\"></ace-editor>\\r\\n                    </mat-tab>\\r\\n                  </mat-tab-group>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <mat-tab-group>\\r\\n                    <mat-tab label=\\\"Body\\\">\\r\\n                      <ace-editor [text]=\\\"log.response.data\\\" style=\\\"height:500px;\\\" [theme]=\\\"'eclipse'\\\"></ace-editor>\\r\\n                    </mat-tab>\\r\\n                    <mat-tab label=\\\"Headers\\\">\\r\\n                      <ace-editor [text]=\\\"log.response.headers\\\" style=\\\"height:500px;\\\" [theme]=\\\"'eclipse'\\\"></ace-editor>\\r\\n                    </mat-tab>\\r\\n                  </mat-tab-group>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </mat-expansion-panel>\\r\\n        </mat-accordion>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\"","declare var xhook: any;\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n/**\r\n * Makes use of the xhook library to intercept all XMLHttpRequests from this application\r\n * and pushes them into a local in-memory javascript array variable.\r\n * Displays the list of requests sent and their corresponding responses.\r\n */\r\n@Component({\r\n  selector: 'app-request-response-log',\r\n  templateUrl: './request-response-log.component.html',\r\n  styleUrls: ['./request-response-log.component.css']\r\n})\r\nexport class RequestResponseLogComponent implements OnInit {\r\n\r\n  logs: any[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    xhook.after((request, response) => {\r\n      if (request.url.indexOf('sockjs-node') === -1) {\r\n        request['body'] = this.format(request['body'], false);\r\n        request['headers'] = this.format(request['headers'], true);\r\n        response['data'] = this.format(response['data'], false);\r\n        response['headers'] = this.format(response['headers'], true);\r\n        this.logs.push({\r\n          request: request,\r\n          response: response\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method used to parse the text and create an object.\r\n   * @param text String to format\r\n   * @param isObject Flag to identify if the text parameter is an object or not\r\n   */\r\n  format(text, isObject) {\r\n    try {\r\n      if (!isObject) {\r\n        const obj = JSON.parse(text);\r\n        return JSON.stringify(obj, null, 2);\r\n      } else {\r\n        return JSON.stringify(text, null, 2);\r\n      }\r\n    } catch (e) {\r\n      return text;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called by the Clear Logs button, which removes all the request-response logs from the memory.\r\n   */\r\n  clearLogs() {\r\n    this.logs = [];\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<a *ngFor=\\\"let resource of supportedResources\\\" routerLink=\\\"/resources/{{resource}}\\\" mat-list-item>{{resource}}</a>\"","import { Component, OnInit, NgZone, OnDestroy } from '@angular/core';\r\nimport { HelperService } from '../../../services/helper.service';\r\nimport { SmartService } from '../../../services/smart.service';\r\nimport { Subject } from 'rxjs';\r\n\r\n/**\r\n * Component used to display the Side Navigation menu based on the Capability of the server and the user scopes in context.\r\n */\r\n@Component({\r\n  selector: 'app-resources-menu',\r\n  templateUrl: './resources-menu.component.html',\r\n  styleUrls: ['./resources-menu.component.css']\r\n})\r\nexport class ResourcesMenuComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * List of FHIR resource types that supports read operation based on the user scopes and capability statement of the FHIR server.\r\n   */\r\n  supportedResources = [];\r\n\r\n  private _unsubscribe = new Subject<void>();\r\n\r\n  constructor(private _zone: NgZone, private _helperService: HelperService, private _smartService: SmartService) { }\r\n\r\n  ngOnInit() {\r\n    this._smartService.getClient()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(smartClient => {\r\n        this._smartService.getConformance()\r\n          .takeUntil(this._unsubscribe)\r\n          .subscribe(conformance => {\r\n            this._zone.run(() => {\r\n              this.supportedResources = this._helperService.resourcesSupported(conformance, smartClient.tokenResponse.scope, 'read');\r\n            });\r\n          });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe.next();\r\n    this._unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccessTokenTimerComponent, ErrorDialogComponent, ObjectViewerComponent, ResourcesMenuComponent } from '.';\r\nimport { RequestResponseLogComponent } from './request-response-log/request-response-log.component';\r\nimport { AllMaterialModule } from '../../all-material/all-material.module';\r\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\r\nimport { AceEditorModule } from 'ng2-ace-editor';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n/**\r\n * Angular module which contains all the components which are re-usable and are used in all the other components in the applications.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AllMaterialModule,\r\n    NgxJsonViewerModule,\r\n    AceEditorModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [\r\n    AccessTokenTimerComponent,\r\n    ErrorDialogComponent,\r\n    ObjectViewerComponent,\r\n    RequestResponseLogComponent,\r\n    ResourcesMenuComponent\r\n  ],\r\n  exports: [\r\n    AccessTokenTimerComponent,\r\n    ErrorDialogComponent,\r\n    ObjectViewerComponent,\r\n    RequestResponseLogComponent,\r\n    ResourcesMenuComponent\r\n  ],\r\n  entryComponents: [ErrorDialogComponent]\r\n})\r\nexport class SmartCommonModule { }\r\n","module.exports = \"\"","module.exports = \"<app-object-viewer title=\\\"Access Token\\\" [value]=\\\"tokenResponse\\\"></app-object-viewer>\"","import { Component, OnInit, NgZone, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, SmartService } from '../../../services';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\n\r\n/**\r\n * Component used to display the Current Token Response provided by the SMART Client api.\r\n */\r\n@Component({\r\n  selector: 'app-access-token',\r\n  templateUrl: './access-token.component.html',\r\n  styleUrls: ['./access-token.component.css']\r\n})\r\nexport class AccessTokenComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * Token response obtained during the SMART OAuth2.0 authorization workflow.\r\n   */\r\n  public tokenResponse: any;\r\n\r\n  private _unsubscribe = new Subject<void>();\r\n\r\n  constructor(private _zone: NgZone, private _smartService: SmartService) { }\r\n\r\n  ngOnInit() {\r\n    this._smartService.getClient()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(smartClient => {\r\n        this._zone.run(() => {\r\n          this.tokenResponse = smartClient.tokenResponse;\r\n        });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe.next();\r\n    this._unsubscribe.complete();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-object-viewer title=\\\"Server Capability\\\" [value]=\\\"conformance\\\"></app-object-viewer>\"","import { Component, OnInit, NgZone, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { SmartService } from '../../../services';\r\n\r\n/**\r\n * Component which displays the Capability Statement of the SMART on FHIR connected to.\r\n */\r\n@Component({\r\n  selector: 'app-conformance',\r\n  templateUrl: './conformance.component.html',\r\n  styleUrls: ['./conformance.component.css']\r\n})\r\nexport class ConformanceComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * Capability statement of the SMART on FHIR Server\r\n   */\r\n  public conformance: any = {};\r\n  public error: any;\r\n\r\n  private _unsubscribe = new Subject<void>();\r\n\r\n  constructor(private _zone: NgZone, private _smartService: SmartService) { }\r\n\r\n  ngOnInit() {\r\n    this._smartService.getClient()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(smartClient => {\r\n        // Makes a FHIR API call to the '/metadata' endpoint to get the CapabilityStatement\r\n        this._smartService.getConformance()\r\n          .takeUntil(this._unsubscribe)\r\n          .subscribe(conformance => {\r\n            this._zone.run(() => {\r\n              this.conformance = conformance;\r\n            });\r\n          });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe.next();\r\n    this._unsubscribe.complete();\r\n  }\r\n}\r\n","module.exports = \".example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.row {\\r\\n    padding: 10px\\r\\n}\"","module.exports = \"<mat-card class=\\\"mat-elevation-z8\\\">\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <mat-card class=\\\"mat-elevation-z8\\\">\\r\\n          <mat-card-title>\\r\\n            Client\\r\\n          </mat-card-title>\\r\\n          <mat-card-content>\\r\\n            <p>Name: {{app.name}}</p>\\r\\n            <p>Unique Name: {{app.uniqueName}}</p>\\r\\n            <p>Client_Id: {{app.clientId}}</p>\\r\\n            <p>Redirect Uri: {{app.redirectUri}}</p>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <mat-card class=\\\"mat-elevation-z8\\\">\\r\\n          <mat-card-title>\\r\\n            Server\\r\\n          </mat-card-title>\\r\\n          <mat-card-content>\\r\\n            <p>Name: {{server.name}}</p>\\r\\n            <p>Unique Name: {{server.uniqueName}}</p>\\r\\n            <p>Base Url: {{server.baseUrl}}</p>\\r\\n            <div *ngIf=\\\"server.information && server.information.patientStandalone\\\">\\r\\n              <p>Information</p>\\r\\n              <ol>\\r\\n                <li *ngFor=\\\"let information of server.information.patientStandalone\\\">{{information}}</li>\\r\\n              </ol>\\r\\n            </div>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div>\\r\\n      <p>Select the Scopes</p>\\r\\n      <button mat-line mat-button (click)=\\\"toggleAll()\\\">Toggle All</button>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-12\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xs-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"checkbox\\\" *ngFor=\\\"let scope of scopes\\\">\\r\\n                  <div class=\\\"col-xs-4\\\">\\r\\n                    <mat-checkbox name=\\\"scopes\\\" value=\\\"{{scope.value}}\\\" [(ngModel)]=\\\"scope.checked\\\"> {{scope.value}}</mat-checkbox>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"server.supportsAccessTypes\\\">\\r\\n        <p>Access Type</p>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-12\\\">\\r\\n            <mat-radio-group [(ngModel)]=\\\"accessType\\\">\\r\\n              <div class=\\\"col-xs-2\\\">\\r\\n                <mat-radio-button value=\\\"online_access\\\">Online Access</mat-radio-button>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-2\\\">\\r\\n                <mat-radio-button value=\\\"offline_access\\\">Offline Access</mat-radio-button>\\r\\n              </div>\\r\\n            </mat-radio-group>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"example-form\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <input matInput placeholder=\\\"Additional Scopes (Comma Seperated)\\\" [(ngModel)]=\\\"additionalScopes\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"connect();\\\">CONNECT</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" routerLink=\\\"/index\\\">CANCEL</button>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { ClientAppService, FhirServerService, GlobalService } from '../../../services';\r\n\r\n/**\r\n * Component which displays the Server and Client Application information which the user is going to connect to.\r\n * Allows the user to select the scopes to be requested during the OAuth2.0 workflow.\r\n */\r\n@Component({\r\n  selector: 'app-connect',\r\n  templateUrl: './connect.component.html',\r\n  styleUrls: ['./connect.component.css']\r\n})\r\nexport class ConnectComponent implements OnInit, OnDestroy {\r\n  app: any;\r\n  server: any;\r\n  scopes: any;\r\n  accessType = 'online_access';\r\n  additionalScopes = '';\r\n\r\n  private _unsubscribe = new Subject<void>();\r\n\r\n  constructor(private _clientAppService: ClientAppService,\r\n    private _fhirServerService: FhirServerService,\r\n    private _route: ActivatedRoute,\r\n    private _globalService: GlobalService) { }\r\n\r\n  ngOnInit() {\r\n    this._clientAppService.getAllClientApps()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(apps => {\r\n        const uniqueName = this._route.snapshot.paramMap.get('uniqueName');\r\n        // Get the app based on the route parameter\r\n        this.app = apps.find(q => q.uniqueName === uniqueName);\r\n        const scopesString: string = this.app.scopes;\r\n        const scopesArray = scopesString.split(',');\r\n        const scopes = scopesArray.map(scope => {\r\n          return { value: scope.trim(), checked: true };\r\n        });\r\n        // Add the default scopes requried for a patient standalone launch\r\n        scopes.push({ value: 'launch/patient', checked: true });\r\n        scopes.push({ value: 'openid', checked: true });\r\n        scopes.push({ value: 'profile', checked: true });\r\n        this.scopes = scopes;\r\n        const serverUniqueName = this.app.server;\r\n        this._fhirServerService.getServer(serverUniqueName)\r\n          .takeUntil(this._unsubscribe)\r\n          .subscribe(server => {\r\n            this.server = server;\r\n          });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method called by the Connect button.\r\n   * Initiates the OAuth2.0 Authorization workflow passing the scopes selected.\r\n   * Makes use of the FHIR.oauth.authorize method in SMART JS Client library.\r\n   */\r\n  connect() {\r\n    let selectedScopes = this.scopes.filter(q => q.checked === true).map(v => v.value).join(' ');\r\n    if (this.server.supportsAccessTypes === true) {\r\n      selectedScopes = selectedScopes + ' ' + this.accessType;\r\n    }\r\n    if (this.additionalScopes !== '') {\r\n      selectedScopes = selectedScopes + ' ' + this.additionalScopes;\r\n    }\r\n    const clientSettings: FHIR.SMART.OAuth2ClientSettings = {\r\n      client_id: this.app.clientId,\r\n      scope: selectedScopes,\r\n      redirect_uri: this.app.redirectUri,\r\n      state: this.app.uniqueName,\r\n    };\r\n    if (this.app.secret) {\r\n      clientSettings.secret = this.app.secret;\r\n    }\r\n    const oauth2Configuration: FHIR.SMART.OAuth2Configuration = {\r\n      client: clientSettings,\r\n      server: this.server.baseUrl\r\n    };\r\n    FHIR.oauth2.authorize(oauth2Configuration, (authError) => {\r\n      this._globalService.setError(authError);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method called by the Toggle All button, which toggles all the scopes checkboxes\r\n   */\r\n  toggleAll() {\r\n    this.scopes.forEach(element => {\r\n      element.checked = !element.checked;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe.next();\r\n    this._unsubscribe.complete();\r\n  }\r\n}\r\n","export * from './access-token/access-token.component';\r\nexport * from './conformance/conformance.component';\r\nexport * from './connect/connect.component';\r\nexport * from './index/index.component';\r\nexport * from './launch/launch.component';\r\nexport * from './redirect/redirect.component';\r\nexport * from './state/state.component';\r\nexport * from './user-profile/user-profile.component';\r\n","module.exports = \"\"","module.exports = \"<mat-tab-group>\\r\\n  <mat-tab label=\\\"Standalone - Patient Apps\\\">\\r\\n    <mat-card class=\\\"mat-elevation-z8\\\">\\r\\n      <mat-card-content>\\r\\n        <div>\\r\\n          <mat-list role=\\\"list\\\">\\r\\n            <mat-list-item role=\\\"listitem\\\" *ngFor=\\\"let app of standalonePatientApps\\\">\\r\\n              <button mat-raised-button color=\\\"primary\\\" (click)=\\\"connect(app.uniqueName);\\\">{{app.name}}</button>\\r\\n            </mat-list-item>\\r\\n          </mat-list>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Launch from EHR - Provider Apps\\\">\\r\\n    <mat-card class=\\\"mat-elevation-z8\\\">\\r\\n      <mat-card-content>\\r\\n        <div>\\r\\n          <mat-card *ngFor=\\\"let app of ehrLaunchApps\\\">\\r\\n            <mat-card-title>\\r\\n              <div>{{app.name}}</div>\\r\\n            </mat-card-title>\\r\\n            <mat-card-content>\\r\\n              <div>\\r\\n                <h4>FHIR Server: {{server(app.server).baseUrl}}</h4>\\r\\n                <p>Client_Id: {{app.clientId}}</p>\\r\\n                <p>Redirect Uri: {{app.redirectUri}}</p>\\r\\n                <p>Launch Url: {{app.launchUrl}}</p>\\r\\n                <div *ngIf=\\\"server(app.server).information && server(app.server).information.ehrLaunch\\\">\\r\\n                  <p>Information</p>\\r\\n                  <ol>\\r\\n                    <li *ngFor=\\\"let information of  server(app.server).information.ehrLaunch\\\">{{information}}</li>\\r\\n                  </ol>\\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { ClientAppService, FhirServerService } from '../../../services';\r\n\r\n/**\r\n * Component which acts as the landing page for this Sample application, which lists all the servers and clients configured.\r\n */\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit, OnDestroy {\r\n\r\n  public standalonePatientApps: any[] = [];\r\n  public ehrLaunchApps: any[] = [];\r\n  public servers: any[];\r\n\r\n  private _unsubscribe = new Subject<void>();\r\n\r\n  constructor(\r\n    private _clientAppService: ClientAppService,\r\n    private _fhirServerService: FhirServerService,\r\n    private _router: Router) { }\r\n\r\n  /**\r\n   * Gets all the FHIR servers and Client apps configured and lists them for the users to connect.\r\n   */\r\n  ngOnInit() {\r\n    this._clientAppService.getStandalonePatientApps()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(apps => {\r\n        this.standalonePatientApps = apps;\r\n      });\r\n\r\n    this._fhirServerService.getAllServers()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(servers => {\r\n        this.servers = servers;\r\n      });\r\n\r\n    this._clientAppService.getEhrLaunchApps()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(apps => {\r\n        this.ehrLaunchApps = apps;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Redirects the user to the Connect page\r\n   * @param uniqueName Unique Name of a defined SMART on FHIR server\r\n   */\r\n  connect(uniqueName: string) {\r\n    this._router.navigate(['/connect/' + uniqueName]);\r\n  }\r\n\r\n  /**\r\n   * Method used to bind the information on the component\r\n   * @param uniqueName Unique Name of a defined SMART on FHIR Server\r\n   */\r\n  server(uniqueName: string) {\r\n    return this.servers.find(q => q.uniqueName === uniqueName);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe.next();\r\n    this._unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  The SMART on FHIR App has been launched from EMR......\\r\\n</p>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\nimport { ClientAppService, GlobalService, FhirServerService } from '../../../services';\r\n\r\n/**\r\n * Component used by the route '/launch/{uniqueName}'\r\n * When registering the application on the server, the Launch URL should be pointing to this route\r\n * with the specific unique name for the client application\r\n */\r\n@Component({\r\n  selector: 'app-launch',\r\n  templateUrl: './launch.component.html',\r\n  styleUrls: ['./launch.component.css']\r\n})\r\nexport class LaunchComponent implements OnInit, OnDestroy {\r\n\r\n  private _unsubscribe = new Subject<void>();\r\n\r\n  constructor(\r\n    private _clientAppService: ClientAppService,\r\n    private _route: ActivatedRoute,\r\n    private _globalService: GlobalService,\r\n    private _fhirServerService: FhirServerService\r\n  ) { }\r\n\r\n  /**\r\n   * Steps performed\r\n   * 1. Identify the SMART on FHIR client application and server details based on the {uniqueName} route parameter.\r\n   * 2. Call FHIR.oauth2.authorize() with the specific OAuth2 configuration of the identified application.\r\n   */\r\n  ngOnInit() {\r\n    this._clientAppService.getAllClientApps()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(clientApps => {\r\n        const uniqueName = this._route.snapshot.paramMap.get('uniqueName');\r\n        const clientApp = clientApps.find(q => q.uniqueName === uniqueName);\r\n        this._fhirServerService.getServer(clientApp.server)\r\n          .takeUntil(this._unsubscribe)\r\n          .subscribe(server => {\r\n            const clientSettings: FHIR.SMART.OAuth2ClientSettings = {\r\n              client_id: clientApp.clientId,\r\n              // Adding the scopes launch openid and profile\r\n              scope: clientApp.scopes + ' offline_access launch openid profile',\r\n              redirect_uri: clientApp.redirectUri,\r\n              state: uniqueName\r\n            };\r\n            // If the client application has a secret, adding it into the configuration\r\n            if (clientApp.secret) {\r\n              clientSettings.secret = clientApp.secret;\r\n            }\r\n            const oauth2Configuration: FHIR.SMART.OAuth2Configuration = {\r\n              client: clientSettings,\r\n              server: server.baseUrl\r\n            };\r\n            // The authorize method of the SMART on FHIR JS client, will take care of completing the OAuth2.0 Workflow\r\n            FHIR.oauth2.authorize(oauth2Configuration, (authError) => {\r\n              this._globalService.setError(authError);\r\n            });\r\n          });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe.next();\r\n    this._unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  IndexComponent, StateComponent, AccessTokenComponent, UserProfileComponent,\r\n  ConformanceComponent, ConnectComponent, LaunchComponent, RedirectComponent\r\n} from '.';\r\nimport { AuthGaurd } from '../../misc/auth-guard';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: 'index', component: IndexComponent },\r\n  { path: 'state', component: StateComponent, canActivate: [AuthGaurd] },\r\n  { path: 'token', component: AccessTokenComponent, canActivate: [AuthGaurd] },\r\n  { path: 'user-profile', component: UserProfileComponent, canActivate: [AuthGaurd] },\r\n  { path: 'conformance', component: ConformanceComponent, canActivate: [AuthGaurd] },\r\n  { path: 'connect/:uniqueName', component: ConnectComponent },\r\n  { path: 'launch/:uniqueName', component: LaunchComponent },\r\n  { path: 'redirect/:uniqueName', component: RedirectComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [],\r\n  exports: [RouterModule]\r\n})\r\nexport class MiscPagesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccessTokenComponent } from './access-token/access-token.component';\r\nimport { ConformanceComponent } from './conformance/conformance.component';\r\nimport { ConnectComponent } from './connect/connect.component';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { LaunchComponent } from './launch/launch.component';\r\nimport { RedirectComponent } from './redirect/redirect.component';\r\nimport { StateComponent } from './state/state.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { MiscPagesRoutingModule } from './misc-pages-routing.module';\r\nimport { AllMaterialModule } from '../../all-material/all-material.module';\r\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\r\nimport { AceEditorModule } from 'ng2-ace-editor';\r\nimport { SmartCommonModule } from '../common/smart-common.module';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n/**\r\n * Modules containing all the components which does not directly make FHIR API Calls except ConformanceComponent\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AllMaterialModule,\r\n    SmartCommonModule,\r\n    NgxJsonViewerModule,\r\n    AceEditorModule,\r\n    MiscPagesRoutingModule\r\n  ],\r\n  declarations: [\r\n    AccessTokenComponent,\r\n    ConformanceComponent,\r\n    ConnectComponent,\r\n    IndexComponent,\r\n    LaunchComponent,\r\n    RedirectComponent,\r\n    StateComponent,\r\n    UserProfileComponent\r\n  ]\r\n})\r\nexport class MiscPagesModule { }\r\n","module.exports = \".wrapper {\\r\\n    margin: 0px;\\r\\n    padding: 0px;\\r\\n    border-width: 0px;\\r\\n    display: table;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.inner {\\r\\n    text-align: center;\\r\\n    height: 300px;\\r\\n    display: table-cell;\\r\\n    vertical-align: middle;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"wrapper\\\">\\r\\n    <div class=\\\"inner\\\">\\r\\n      <button mat-raised-button color=\\\"warn\\\" routerLink=\\\"/index\\\">RECONNECT</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Route, ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService, GlobalService } from '../../../services';\r\n\r\n/**\r\n * Component which handles the OAuth Token workflow and initializes the SMART Client\r\n * Initializes the SMART client and redirects to the Home page.\r\n */\r\n@Component({\r\n  selector: 'app-redirect',\r\n  templateUrl: './redirect.component.html',\r\n  styleUrls: ['./redirect.component.css']\r\n})\r\nexport class RedirectComponent implements OnInit {\r\n  constructor(\r\n    private _router: Router,\r\n    private _authService: AuthService,\r\n    private _globalService: GlobalService\r\n  ) { }\r\n\r\n  /**\r\n   * Callback method when an error occurs during the OAuth2.0 token workflow\r\n   */\r\n  oauth2ReadyErrback = (error: any) => {\r\n    this._globalService.setError({ error: error });\r\n  }\r\n\r\n  /**\r\n   * Callback method once the SMART client has been initialized after the OAuth2.0 token workflow.\r\n   */\r\n  oauth2ReadyCallback = (smartClient: FHIR.SMART.SMARTClient) => {\r\n    this._authService.login();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Calling the SMART JS Client ready method to initialize the SMART Client\r\n    FHIR.oauth2.ready(this.oauth2ReadyCallback, this.oauth2ReadyErrback);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-object-viewer title=\\\"State\\\" [value]=\\\"state\\\"></app-object-viewer>\"","import { Component, OnInit, NgZone, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { SmartService } from '../../../services';\r\n\r\n/**\r\n * Component which displays the current stat of the SMART Client Application\r\n * Client\r\n * Server\r\n * Authorization Provider\r\n */\r\n@Component({\r\n  selector: 'app-state',\r\n  templateUrl: './state.component.html',\r\n  styleUrls: ['./state.component.css']\r\n})\r\nexport class StateComponent implements OnInit, OnDestroy {\r\n\r\n  public state: any;\r\n\r\n  private _unsubscribe = new Subject<void>();\r\n\r\n  constructor(private _zone: NgZone, private _smartService: SmartService) { }\r\n\r\n  ngOnInit() {\r\n    this._smartService.getClient()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(smartClient => {\r\n        this._zone.run(() => {\r\n          this.state = smartClient.state;\r\n        });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe.next();\r\n    this._unsubscribe.complete();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-object-viewer title=\\\"User Profile\\\" [value]=\\\"userProfile\\\"></app-object-viewer>\"","import { Component, OnInit, NgZone, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\nimport { SmartService, HelperService } from '../../../services';\r\n\r\n/**\r\n * Component used to display the User Profile by parsing the JWT token provided in id_tokent\r\n */\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.css']\r\n})\r\nexport class UserProfileComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * Parsed id_token JWT object\r\n   */\r\n  public userProfile: any;\r\n\r\n  private _unsubscribe = new Subject<void>();\r\n\r\n  constructor(private _zone: NgZone, private _smartService: SmartService, private _helperService: HelperService) { }\r\n\r\n  /**\r\n   * Read and parse the id_token, if it does exist in the tokenResponse obtained during the OAuth2.0 authorization workflow.\r\n   */\r\n  ngOnInit() {\r\n    this._smartService.getClient()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(smartClient => {\r\n        this._zone.run(() => {\r\n          if (smartClient && smartClient.tokenResponse && smartClient.tokenResponse.id_token) {\r\n            const id_token = smartClient.tokenResponse.id_token;\r\n            this.userProfile = this._helperService.parseJwt(id_token);\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe.next();\r\n    this._unsubscribe.complete();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-progress-bar *ngIf=\\\"isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n<mat-card class=\\\"mat-elevation-z8\\\">\\r\\n  <mat-card-title>\\r\\n    <div class=\\\"row\\\">\\r\\n      <span>{{resourceType}} ID: {{id}}</span>\\r\\n      <span style=\\\"float: right\\\">\\r\\n        <button color=\\\"warn\\\" mat-raised-button *ngIf=\\\"canDelete\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n      </span>\\r\\n    </div>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <div>\\r\\n      <mat-tab-group [selectedIndex]=\\\"selectedTabIndex\\\">\\r\\n        <mat-tab *ngIf=\\\"resource\\\" label=\\\"JSON\\\">\\r\\n          <ace-editor [(text)]=\\\"code\\\" style=\\\"height:500px;\\\" [theme]=\\\"'eclipse'\\\" [autoUpdateContent]=\\\"false\\\"></ace-editor>\\r\\n        </mat-tab>\\r\\n        <mat-tab *ngIf=\\\"resource\\\" label=\\\"View\\\">\\r\\n          <ngx-json-viewer *ngIf=\\\"resource\\\" [json]=\\\"resource\\\"></ngx-json-viewer>\\r\\n        </mat-tab>\\r\\n        <mat-tab *ngIf=\\\"resourceRequest || resourceResponse\\\" label=\\\"Request-Response\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <h4>Request</h4>\\r\\n              <ace-editor [text]=\\\"codeResourceRequest\\\" style=\\\"height:500px;\\\" [theme]=\\\"'eclipse'\\\"></ace-editor>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <h4>Response</h4>\\r\\n              <ace-editor [text]=\\\"codeResourceResponse\\\" style=\\\"height:500px;\\\" [theme]=\\\"'eclipse'\\\"></ace-editor>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab *ngIf=\\\"error\\\" label=\\\"Error\\\">\\r\\n          <ace-editor *ngIf=\\\"error\\\" [text]=\\\"codeError\\\" style=\\\"height:500px;\\\" [theme]=\\\"'eclipse'\\\"></ace-editor>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!error && canUpdate && !resourceResponse\\\" (click)=\\\"save()\\\">SAVE</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" routerLink=\\\"/resources/{{resourceType}}\\\">CANCEL</button>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\"","import { Component, OnInit, NgZone, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HelperService } from '../../../services/helper.service';\r\nimport { SmartService } from '../../../services/smart.service';\r\nimport { GlobalService } from '../../../services/global.service';\r\nimport { Subject } from 'rxjs';\r\n\r\n/**\r\n * Component used to create/update a particular FHIR resource\r\n * FHIR resource fetched based on the resource type and the id.\r\n * POST/PUT request performed.\r\n * Can see and compare the request and response resource objects.\r\n */\r\n@Component({\r\n  selector: 'app-edit-resource',\r\n  templateUrl: './edit-resource.component.html',\r\n  styleUrls: ['./edit-resource.component.css']\r\n})\r\nexport class EditResourceComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * FHIR Resource type, passed via the Route parameter\r\n   */\r\n  resourceType: any;\r\n\r\n  /**\r\n   * FHIR Resource ID, passed via the Route parameter\r\n   */\r\n  id: any;\r\n\r\n  /**\r\n   * Actual resource fetched from the FHIR server based on the ID and resource type\r\n   */\r\n  resource: any;\r\n\r\n  /**\r\n   * Resource object sent to the server during the PUT request.\r\n   */\r\n  resourceRequest: any;\r\n\r\n  /**\r\n   * Resource object recieved after a success PUT request\r\n   */\r\n  resourceResponse: any;\r\n\r\n  /**\r\n   * Error occured while the PUT request is performed.\r\n   */\r\n  error: any;\r\n\r\n  /**\r\n   * Flag denoting whether the server has the capability to update a resource or the user has the required scope.\r\n   */\r\n  canUpdate: boolean;\r\n\r\n  /**\r\n   * Flag denoting whether the server has the capability to delete a resource or the user has the required scope.\r\n   */\r\n  canDelete: boolean;\r\n\r\n  /**\r\n   * Flag used to show that a request is in progress. Used by the progress indicator.\r\n   */\r\n  isLoading: boolean;\r\n\r\n  /**\r\n   * Index of the Tab selected\r\n   */\r\n  selectedTabIndex = 0;\r\n\r\n  private _unsubscribe = new Subject<void>();\r\n\r\n  constructor(\r\n    private _zone: NgZone,\r\n    private _route: ActivatedRoute,\r\n    private _helperService: HelperService,\r\n    private _smartService: SmartService\r\n  ) { }\r\n\r\n  /**\r\n   * Checks if the server has the capability to update the particular type of FHIR resource.\r\n   * Fetch the resource from the FHIR server\r\n   */\r\n  ngOnInit() {\r\n    this.resourceType = this._route.snapshot.paramMap.get('resourceType');\r\n    this.id = this._route.snapshot.paramMap.get('id');\r\n    this._smartService.getClient()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(smartClient => {\r\n        this._canPerform(smartClient);\r\n        if (this.id === 'new') {\r\n          this.resource = { resourceType: this.resourceType };\r\n        } else {\r\n          this._setResource(smartClient);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Fetches the resource based on the ID passed in the route parameter\r\n   * @param smartClient Initialized SMART Client\r\n   */\r\n  private _setResource(smartClient: FHIR.SMART.SMARTClient) {\r\n    this.isLoading = true;\r\n    const readParams: FHIR.SMART.ReadParams = {\r\n      id: this.id,\r\n      type: this.resourceType\r\n    };\r\n    // Makes use of the SMART on FHIR JS Client read api method\r\n    smartClient.api.read(readParams).then(response => {\r\n      this._zone.run(() => {\r\n        this.isLoading = false;\r\n        this.resource = response.data;\r\n        this.error = null;\r\n      });\r\n    }, error => {\r\n      this._zone.run(() => {\r\n        this.isLoading = false;\r\n        this.error = error;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback on a Success on the POST/PUT request\r\n   */\r\n  private _success = (response) => {\r\n    this._zone.run(() => {\r\n      this.isLoading = false;\r\n      // Updates the resource object recieved after the update\r\n      if (response.data) {\r\n        this.resourceResponse = response.data;\r\n      } else {\r\n        this.resourceResponse = response;\r\n      }\r\n      this.selectedTabIndex = 2;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback on an Error on the POST/PUT request\r\n   */\r\n  private _error = (error) => {\r\n    this._zone.run(() => {\r\n      this.isLoading = false;\r\n      this.error = error;\r\n      this.selectedTabIndex = 3;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method called by the Save button.\r\n   * The resource object in the editor is passed on to the FHIR server\r\n   * The SMART on FHIR JS Client create/update api is used.\r\n   */\r\n  save() {\r\n    this._smartService.getClient()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(smartClient => {\r\n        this._zone.run(() => {\r\n          // Updates the resource object sent\r\n          this.resourceRequest = this._helperService.clone(this.resource);\r\n          this.isLoading = true;\r\n          if (this.id === 'new') {\r\n            smartClient.api.create({ resource: this.resourceRequest }).then(this._success, this._error);\r\n          } else {\r\n            smartClient.api.update({ resource: this.resourceRequest }).then(this._success, this._error);\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  delete() {\r\n    this._smartService.getClient()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(smartClient => {\r\n        this._zone.run(() => {\r\n          // Updates the resource object sent\r\n          this.resourceRequest = this._helperService.clone(this.resource);\r\n          this.isLoading = true;\r\n          smartClient.api.delete({ resource: this.resourceRequest }).then(this._success, this._error);\r\n        });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method checks if the server has the capability to perform the particular interaction on  the particular FHIR resource type and\r\n   * the user has the required scope in context.\r\n   * @param smartClient Initialized SMART Client\r\n   */\r\n  private _canPerform(smartClient: FHIR.SMART.SMARTClient) {\r\n    this._smartService.getConformance()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(conformance => {\r\n        this._zone.run(() => {\r\n          let interaction = '';\r\n          if (this.id === 'new') {\r\n            interaction = 'create';\r\n          } else {\r\n            interaction = 'update';\r\n          }\r\n          this.canUpdate = this._helperService.hasSupport(conformance, smartClient.tokenResponse.scope, this.resourceType, interaction);\r\n          if (this.id !== 'new') {\r\n            this.canDelete = this._helperService.hasSupport(conformance, smartClient.tokenResponse.scope, this.resourceType, 'delete');\r\n          }\r\n        });\r\n      }, error => {\r\n        this._zone.run(() => {\r\n          this.error = error;\r\n        });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Setter method used by the Ace Editor to set the value of the resource object\r\n   */\r\n  set code(v) {\r\n    try {\r\n      this.resource = JSON.parse(v);\r\n    } catch (e) {\r\n      console.log('error occored while you were typing the JSON');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Getter method used by the Ace Editor to get the value of the resource object\r\n   */\r\n  get code() {\r\n    return JSON.stringify(this.resource, null, 2);\r\n  }\r\n\r\n  /**\r\n   * Getter method used by the Ace Editor to get the value of the error object.\r\n   */\r\n  get codeError() {\r\n    return JSON.stringify(this.error, null, 2);\r\n  }\r\n\r\n  /**\r\n   * Getter method used by the Ace Editor to get the value of the resource request object sent.\r\n   */\r\n  get codeResourceRequest() {\r\n    return JSON.stringify(this.resourceRequest, null, 2);\r\n  }\r\n\r\n  /**\r\n   * Getter method used by the Ace Editor to get the value of the response object.\r\n   */\r\n  get codeResourceResponse() {\r\n    return JSON.stringify(this.resourceResponse, null, 2);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe.next();\r\n    this._unsubscribe.complete();\r\n  }\r\n}\r\n","export * from './edit-resource/edit-resource.component';\r\nexport * from './patient/patient.component';\r\nexport * from './resources-table/resources-table.component';\r\nexport * from './resources-table-container/resources-table-container.component';\r\n","module.exports = \"\"","module.exports = \"<app-object-viewer title=\\\"Patient\\\" [value]=\\\"patient\\\"></app-object-viewer>\\r\\n<app-object-viewer *ngIf=\\\"error\\\" title=\\\"Error\\\" [value]=\\\"error\\\" hideView=\\\"true\\\"></app-object-viewer>\"","import { Component, OnInit, NgZone, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { SmartService } from '../../../services/smart.service';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\n\r\n@Component({\r\n  selector: 'app-patient',\r\n  templateUrl: './patient.component.html',\r\n  styleUrls: ['./patient.component.css']\r\n})\r\nexport class PatientComponent implements OnInit, OnDestroy {\r\n  public patient: any;\r\n  public error: any;\r\n\r\n  private _unsubscribe = new Subject<void>();\r\n\r\n  constructor(private _zone: NgZone, private _smartService: SmartService) { }\r\n\r\n  /**\r\n   * Fetch the Patient Resource based on the Patient in Context\r\n   */\r\n  ngOnInit() {\r\n    this._smartService.getClient()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(smartClient => {\r\n        const api: FHIR.SMART.Api = smartClient.api;\r\n        const searchParams: FHIR.SMART.SearchParams = {\r\n          type: 'Patient',\r\n          patient: smartClient.patient.id,\r\n        };\r\n        // Makes use of the SMART on FHIR JS Client search api method\r\n        api.search(searchParams).then(response => {\r\n          this._zone.run(() => {\r\n            this.patient = response.data;\r\n            this.error = null;\r\n          });\r\n        }, error => {\r\n          this._zone.run(() => {\r\n            this.error = error;\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe.next();\r\n    this._unsubscribe.complete();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PatientComponent, ResourcesTableContainerComponent, EditResourceComponent } from '.';\r\nimport { AuthGaurd } from '../../misc/auth-guard';\r\n\r\nconst routes: Routes = [\r\n  { path: 'resources/Patient', component: PatientComponent, canActivate: [AuthGaurd] },\r\n  { path: 'resources/:resourceType', component: ResourcesTableContainerComponent, canActivate: [AuthGaurd] },\r\n  { path: 'resources/:resourceType/:id', component: EditResourceComponent, canActivate: [AuthGaurd] },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [],\r\n  exports: [RouterModule]\r\n})\r\nexport class ResourcesRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<mat-progress-bar *ngIf=\\\"isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n<mat-card class=\\\"mat-elevation-z8\\\">\\r\\n  <mat-card-title>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-2 col-xs-1\\\">\\r\\n        <span>{{resourceType}}</span>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-3 col-md-9\\\">\\r\\n      </div>\\r\\n      <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/resources/{{resourceType}}/new\\\">Add</button>\\r\\n    </div>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <mat-accordion>\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>\\r\\n            Filter\\r\\n          </mat-panel-title>\\r\\n          <mat-panel-description>\\r\\n            Specify the filter as JSON(mongodb-like query syntax)\\r\\n          </mat-panel-description>\\r\\n        </mat-expansion-panel-header>\\r\\n        <div class=\\\"min-padding\\\">\\r\\n          Search Parameters Supported\\r\\n          <mat-list role=\\\"list\\\">\\r\\n            <mat-list-item role=\\\"listitem\\\" *ngFor=\\\"let param of searchParams\\\" matTooltip=\\\"{{param.documentation}}\\\">\\r\\n              <h4 mat-line>{{param.name}}</h4>\\r\\n              <p mat-line>{{param.type}}</p>\\r\\n              <div>{{param.documentation}}</div>\\r\\n            </mat-list-item>\\r\\n          </mat-list>\\r\\n        </div>\\r\\n        <ace-editor [(text)]=\\\"queryCode\\\" style=\\\"height:100px;\\\" [theme]=\\\"'eclipse'\\\"></ace-editor>\\r\\n        <div class=\\\"min-padding\\\">\\r\\n          <span class=\\\"min-padding\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"applyFilter()\\\">Apply</button>\\r\\n          </span>\\r\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"reset()\\\">Reset</button>\\r\\n        </div>\\r\\n      </mat-expansion-panel>\\r\\n    </mat-accordion>\\r\\n    <app-resources-table *ngIf=\\\"!error\\\" [bundle]=\\\"resources\\\" [resourceType]=\\\"resourceType\\\"></app-resources-table>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<app-object-viewer *ngIf=\\\"error\\\" title=\\\"Error\\\" [value]=\\\"error\\\" hideView=\\\"true\\\"></app-object-viewer>\"","import { Component, OnInit, NgZone, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { HelperService } from '../../../services/helper.service';\r\nimport { SmartService } from '../../../services/smart.service';\r\nimport { Subscription, Subject } from 'rxjs';\r\n\r\n/**\r\n * Component which fetches the FHIR resources based on the route parameter FHIR resource type\r\n * Option to specify the query object\r\n * Filter lists all the Search parameters supported by the FHIR server for this resource type\r\n */\r\n@Component({\r\n  selector: 'app-resources-table-container',\r\n  templateUrl: './resources-table-container.component.html',\r\n  styleUrls: ['./resources-table-container.component.css']\r\n})\r\nexport class ResourcesTableContainerComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * FHIR Resource Type to be fetched\r\n   */\r\n  resourceType: string;\r\n\r\n  /**\r\n   * List of resources fetched from the FHIR server based on the query object\r\n   */\r\n  resources: any;\r\n\r\n  /**\r\n   * Query object passed to the SMART JS Client Search api.\r\n   */\r\n  query: any;\r\n\r\n  /**\r\n   * Search Parameters supported by the FHIR Server for this particular FHIR Resource Type\r\n   */\r\n  searchParams: any;\r\n\r\n  /**\r\n   * Error occured while trying to fetch the resource\r\n   */\r\n  error: any;\r\n\r\n  /**\r\n   * Flag to show that a request to fetch FHIR resources are in progress. Used by the Loading indicator.\r\n   */\r\n  isLoading: boolean;\r\n\r\n  private _unsubscribe = new Subject<void>();\r\n\r\n  constructor(\r\n    private _helperService: HelperService,\r\n    private _route: ActivatedRoute,\r\n    private _zone: NgZone,\r\n    private _smartService: SmartService\r\n  ) { }\r\n\r\n  /**\r\n   * List the Supported Search parameters in the filter and performs the search based on the FHIR Resource type\r\n   * and the patient in context.\r\n   */\r\n  ngOnInit() {\r\n    this._route.params.subscribe(val => {\r\n      this.resourceType = this._route.snapshot.paramMap.get('resourceType');\r\n      this._smartService.getClient()\r\n        .takeUntil(this._unsubscribe)\r\n        .subscribe(smartClient => {\r\n          this._setSupportedSearchParams(smartClient);\r\n          this._searchByPatientId(smartClient);\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set the search parameters supported by the resource type in the filter by parsing the Capability statement of the FHIR Server\r\n   * @param smartClient Initialized SMART Client\r\n   */\r\n  private _setSupportedSearchParams(smartClient: FHIR.SMART.SMARTClient) {\r\n    this._smartService.getConformance()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(conformance => {\r\n        this._zone.run(() => {\r\n          this.searchParams = this._helperService.searchParamsSupported(conformance, this.resourceType);\r\n        });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Perform the FHIR API Search call based on the resource type and the patient in context\r\n   * @param smartClient Initialized SMART Client\r\n   */\r\n  private _searchByPatientId(smartClient: FHIR.SMART.SMARTClient) {\r\n    this.query = {\r\n      patient: smartClient.patient.id\r\n    };\r\n    this._search(smartClient);\r\n  }\r\n\r\n  /**\r\n   * Perform the FHIR API Search call based on the resource type and the query object set via the filter\r\n   * @param smartClient Initialized SMART Client\r\n   */\r\n  private _search(smartClient: FHIR.SMART.SMARTClient) {\r\n    console.log(this.query);\r\n    this.isLoading = true;\r\n    const searchParams: FHIR.SMART.SearchParams = {\r\n      type: this.resourceType,\r\n      query: this.query\r\n    };\r\n    // Makes use of the SMART on FHIR JS Client search api method\r\n    smartClient.api.search(searchParams).then(response => {\r\n      this._zone.run(() => {\r\n        this.isLoading = false;\r\n        this.resources = response.data;\r\n        this.error = null;\r\n      });\r\n    }, error => {\r\n      this._zone.run(() => {\r\n        this.isLoading = false;\r\n        this.error = error;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Called by the Apply button, to apply the query object in the editor and perform the FHIR API Call\r\n   */\r\n  applyFilter() {\r\n    this._smartService.getClient()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(smartClient => {\r\n        this._search(smartClient);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Called by the Reset button in the filter to clear the current query object and reset.\r\n   */\r\n  reset() {\r\n    this._smartService.getClient()\r\n      .takeUntil(this._unsubscribe)\r\n      .subscribe(smartClient => {\r\n        this._searchByPatientId(smartClient);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Setter method used by the Ace Editor to set the value of the query object\r\n   */\r\n  set queryCode(v) {\r\n    try {\r\n      this.query = JSON.parse(v);\r\n    } catch (e) {\r\n      console.log('error occored while you were typing the JSON');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Getter method used by the Ace Editor to get the value of the query object\r\n   */\r\n  get queryCode() {\r\n    return JSON.stringify(this.query, null, 2);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe.next();\r\n    this._unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-tab-group>\\r\\n  <mat-tab label=\\\"LIST\\\">\\r\\n    <mat-list *ngIf=\\\"bundle\\\">\\r\\n      <div *ngFor=\\\"let entry of bundle.entry\\\">\\r\\n        <div *ngIf=\\\"entry.resource.resourceType !== 'OperationOutcome'\\\">\\r\\n          <mat-list-item>\\r\\n            <p mat-line>ID: {{entry.resource.id}} </p>\\r\\n            <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/resources/{{entry.resource.resourceType}}/{{entry.resource.id}}\\\">View</button>\\r\\n          </mat-list-item>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-list>\\r\\n    <div *ngIf=\\\"bundle && bundle.total == 0\\\">\\r\\n      There are no resources of type {{resourceType}}\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"JSON\\\">\\r\\n    <ace-editor [text]=\\\"codeBundle\\\" style=\\\"height:500px;\\\" [theme]=\\\"'eclipse'\\\"></ace-editor>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-resources-table',\r\n  templateUrl: './resources-table.component.html',\r\n  styleUrls: ['./resources-table.component.css']\r\n})\r\nexport class ResourcesTableComponent implements OnInit {\r\n\r\n  /**\r\n   * FHIR Resource Bundle passed on, which will be listed.\r\n   */\r\n  @Input() bundle: any;\r\n\r\n  /**\r\n   * Type of FHIR Resources\r\n   */\r\n  @Input() resourceType: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * Getter method used by the Ace Editor to get the value of the bundle object\r\n   */\r\n  get codeBundle() {\r\n    return JSON.stringify(this.bundle, null, 2);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  EditResourceComponent, PatientComponent,\r\n  ResourcesTableComponent, ResourcesTableContainerComponent\r\n} from '.';\r\nimport { ResourcesRoutingModule } from './resources-routing.module';\r\nimport { AllMaterialModule } from '../../all-material/all-material.module';\r\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\r\nimport { AceEditorModule } from 'ng2-ace-editor';\r\nimport { SmartCommonModule } from '../common/smart-common.module';\r\n\r\n/**\r\n * Angular Module containing all the components which are used by the routes under '/resources'\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AllMaterialModule,\r\n    NgxJsonViewerModule,\r\n    AceEditorModule,\r\n    ResourcesRoutingModule,\r\n    SmartCommonModule\r\n  ],\r\n  declarations: [\r\n    EditResourceComponent,\r\n    PatientComponent,\r\n    ResourcesTableComponent,\r\n    ResourcesTableContainerComponent\r\n  ]\r\n})\r\nexport class ResourcesModule { }\r\n","import { ClientApp } from '../models/client-app';\r\n/**\r\n * List of SMART on FHIR Client Applications defined in the SAMPLE APPLICATION\r\n */\r\nexport const CLIENT_APPS: ClientApp[] = [\r\n    {\r\n        name: 'CHBase PPE - Sample Standalone and EHR Launch App',\r\n        uniqueName: 'chbaseppe1',\r\n        clientId: '6faa0fe6-8eb2-4217-8c4f-0910f7fed0b5',\r\n        redirectUri: 'http://localhost:4200/redirect/chbaseppe1',\r\n        launchUrl: 'http://localhost:4200/launch/chbaseppe1',\r\n        scopes: 'patient/*.*',\r\n        standalonePatient: true,\r\n        ehrLaunch: true,\r\n        server: 'chbaseppe',\r\n        secret: '5e24b756-9a70-4ea7-a602-150c639280a3'\r\n    },\r\n    {\r\n        name: 'CHBase PPE - Sample App - Live Demo',\r\n        uniqueName: 'sampleappdocs',\r\n        clientId: '6faa0fe6-8eb2-4217-8c4f-0910f7fed0b5',\r\n        redirectUri: 'https://chbase.github.io/smart-ng-fhir-app/redirect/sampleappdocs',\r\n        launchUrl: 'https://chbase.github.io/smart-ng-fhir-app/launch/sampleappdocs',\r\n        scopes: 'patient/*.*',\r\n        standalonePatient: true,\r\n        ehrLaunch: true,\r\n        server: 'chbaseppe',\r\n        secret: 'c55a4f55-c639-4995-8696-d8bbd9c43db7'\r\n    }\r\n];\r\n","import { FhirServer } from '../models/fhir-server';\r\n/**\r\n * List of SMART on FHIR Servers defined in the SAMPLE APPLICATION\r\n */\r\nexport const FHIR_SERVERS: FhirServer[] = [\r\n    {\r\n        uniqueName: 'chbaseppe',\r\n        name: 'CHBase PPE',\r\n        baseUrl: 'https://platform.ppe.chbase.com/api/fhir',\r\n        information: {\r\n            patientStandalone: [\r\n            ],\r\n            ehrLaunch: [\r\n                'Login to the CHBase Shell and visit the App directory page',\r\n                'Click on Learn more about the app',\r\n                'Click on Go to application (external link)'\r\n            ]\r\n        },\r\n        supportsAccessTypes: true\r\n    }\r\n];\r\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { take, map } from 'rxjs/operators';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Authentication Guard applied on all the routes, which requires a valid user context\r\n */\r\n@Injectable()\r\nexport class AuthGaurd implements CanActivate {\r\n\r\n    constructor(private _authService: AuthService, private _router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n        return this._authService.isLoggedIn\r\n            .pipe(\r\n                take(1),\r\n                map((isLoggedIn: boolean) => {\r\n                    if (!isLoggedIn) {\r\n                        this._router.navigate(['/index']);\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                })\r\n            );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { SmartService } from './smart.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { GlobalService } from './global.service';\r\n\r\n/**\r\n * Service which contains the methods to manage the logged in User\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private loggedIn = new BehaviorSubject<boolean>(false);\r\n\r\n  constructor(private _router: Router,\r\n    private _globalService: GlobalService) { }\r\n\r\n    /**\r\n     * Logout the active user. Clears the Session and navigates to the landing page.\r\n     */\r\n  logout() {\r\n    sessionStorage.clear();\r\n    this.loggedIn.next(false);\r\n    this._router.navigate(['/index']);\r\n  }\r\n\r\n  /**\r\n   * Flags that a user has logged in to the application\r\n   */\r\n  login() {\r\n    this.loggedIn.next(true);\r\n    this._router.navigate(['/resources/Patient']);\r\n  }\r\n\r\n  /**\r\n   * Method called to check if there is an active user logged in to the application.\r\n   * @returns {Observable<boolean>} Subscribers get notified when the state changes.\r\n   */\r\n  get isLoggedIn() {\r\n    if (sessionStorage.getItem('tokenResponse')) {\r\n      this.loggedIn.next(true);\r\n    } else {\r\n      this.loggedIn.next(false);\r\n    }\r\n    return this.loggedIn.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { CLIENT_APPS } from '../data/client-apps';\r\nimport { ClientApp } from '../models/client-app';\r\n\r\n/**\r\n * Service to get the SMART on FHIR client applications defined against different servers.\r\n * The same sample application can be configured to work against different configured SMART on FHIR servers.\r\n * For this sample app, we are making using of a hardcoded array defined in client-app.ts\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientAppService {\r\n\r\n  private _ehrLanchAppsSubject: BehaviorSubject<ClientApp[]> =\r\n    new BehaviorSubject<ClientApp[]>(CLIENT_APPS.filter(q => q.ehrLaunch === true));\r\n\r\n  private _allClientAppSubject: BehaviorSubject<ClientApp[]> =\r\n    new BehaviorSubject<ClientApp[]>(CLIENT_APPS);\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * Get all the SMART on FHIR client applications configured, which can act as a standalone patient facing application.\r\n   */\r\n  getStandalonePatientApps(): Observable<ClientApp[]> {\r\n    return Observable.create(observer => {\r\n      observer.next(CLIENT_APPS.filter(q => q.standalonePatient === true));\r\n      observer.complete();\r\n    });\r\n  }\r\n\r\n   /**\r\n   * Get all the SMART on FHIR client applications configured, which can be launch from an EHR system.\r\n   */\r\n  getEhrLaunchApps(): Observable<ClientApp[]> {\r\n    return Observable.create(observer => {\r\n      observer.next(CLIENT_APPS.filter(q => q.ehrLaunch === true));\r\n      observer.complete();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all the SMART on FHIR client applications configured for this sample application.\r\n   */\r\n  getAllClientApps(): Observable<ClientApp[]> {\r\n    return Observable.create(observer => {\r\n      observer.next(CLIENT_APPS);\r\n      observer.complete();\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FHIR_SERVERS } from '../data/fhir-servers';\r\nimport { FhirServer } from '../models/fhir-server';\r\n\r\n/**\r\n * Service to get the SMART on FHIR servers defined.\r\n * The same sample application can be configured to work against different configured SMART on FHIR servers.\r\n * For this sample app, we are making using of a hardcoded array defined in fhir-servers.ts\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FhirServerService {\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * Fetch the SMART on FHIR server by the unique name defined\r\n   * @param {string} uniqueName Unique name of the SMART on FHIR Server\r\n   * @returns {Observable<FhirServer>} Observable to the FhirServer based on the uniqueName\r\n   */\r\n  getServer(uniqueName: string): Observable<FhirServer> {\r\n    return Observable.create(observer => {\r\n      observer.next(FHIR_SERVERS.find(q => q.uniqueName === uniqueName));\r\n      observer.complete();\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Fetch all the SMART on FHIR servers defined\r\n   */\r\n  getAllServers(): Observable<any[]> {\r\n    return Observable.create(observer => {\r\n      observer.next(FHIR_SERVERS);\r\n      observer.complete();\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/**\r\n * Service which acts as Global Event Bus\r\n * Only use to set the error object from various components.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalService {\r\n\r\n  private _error = new ReplaySubject<any>(1);\r\n\r\n  constructor(private _route: ActivatedRoute) { }\r\n\r\n  /**\r\n   * Method to publish that an application wide error has occured.\r\n   * @param error Error object\r\n   */\r\n  setError(error: any) {\r\n    this._error.next(error);\r\n  }\r\n\r\n  /**\r\n   * Get the last error published anywhere in the application via setError method\r\n   * Subscribed in the AppComponent and an Error Modal screen is shown when ever an error occurs.\r\n   */\r\n  public getError(): Observable<any> {\r\n    return this._error.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Service containing the helper methods\r\n * Check if the resource is supported by the server, if the user has scope to a particular resource etc\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HelperService {\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * Method to parse the capability statement and retrive the search parameters of a particular resource type.\r\n   * @param conformance Capability statement of the SMART on FHIR server\r\n   * @param resourceType Type of FHIR resource\r\n   * @returns {any[]} The list of search parameters\r\n   */\r\n  public searchParamsSupported(conformance: any, resourceType: string): any[] {\r\n    if (conformance && conformance.rest\r\n      && conformance.rest.length > 0 && conformance.rest[0].resource\r\n      && conformance.rest[0].resource.length > 0\r\n      && resourceType) {\r\n      const resourceTypeConformance = conformance.rest[0].resource.find(q => q.type === resourceType);\r\n      if (resourceTypeConformance && resourceTypeConformance.searchParam && resourceTypeConformance.searchParam.length > 0) {\r\n        return resourceTypeConformance.searchParam;\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Get the list of resource types that the current user has scopes and ther server supports.\r\n   * @param conformance Capability statement of the SMART on FHIR server\r\n   * @param scopes Scopes available for the current user\r\n   * @param interaction The operation we are try to check eg. read, create, update, delete\r\n   * @returns {any[]} List of resource types supported.\r\n   */\r\n  public resourcesSupported(conformance: any, scopes: string, interaction: string): any[] {\r\n    if (conformance && conformance.rest\r\n      && conformance.rest.length > 0 && conformance.rest[0].resource\r\n      && conformance.rest[0].resource.length > 0) {\r\n      return conformance.rest[0].resource\r\n        .filter(q => (q.interaction.findIndex(x => x.code === interaction) !== -1))\r\n        .map(y => y.type)\r\n        .filter(q => {\r\n          if (scopes) {\r\n            return scopes.toLowerCase().indexOf(q.toLowerCase() + '.' + interaction) !== -1 ||\r\n              scopes.toLowerCase().indexOf(q.toLowerCase() + '.*') !== -1 ||\r\n              scopes.toLowerCase().indexOf('patient/*.*') !== -1;\r\n          } else {\r\n            return true;\r\n          }\r\n        });\r\n    }\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Check if the logged in user has the required scope along with the server capability to perform the specific operation\r\n   * for a specific type of FHIR resource.\r\n   * @param conformance Capability statement of the SMART on FHIR server\r\n   * @param scopes Scopes available for the current user\r\n   * @param interaction The operation we are try to check eg. read, create, update, delete\r\n   * @param resourceType The type of FHIR resource\r\n   * @returns {boolean} Has support or not\r\n   */\r\n  public hasSupport(conformance: any, scopes: string, resourceType: string, interaction: string): boolean {\r\n    const resourcesSupported = this.resourcesSupported(conformance, scopes, interaction);\r\n    return resourcesSupported.findIndex(q => q === resourceType) !== -1;\r\n  }\r\n\r\n  /**\r\n   * Easy method to deep clone an object\r\n   * @param obj Object to be cloned\r\n   */\r\n  public clone(obj: any): any {\r\n    return JSON.parse(JSON.stringify(obj));\r\n  }\r\n\r\n  /**\r\n   * Helper method to find how many seconds until the passed data from now.\r\n   * @param date The date we need to find the duration till\r\n   */\r\n  public howLong(date: Date): Number {\r\n    const currentDate = new Date();\r\n    const dif = date.getTime() - currentDate.getTime();\r\n    const seconds = Math.round(dif / 1000);\r\n    return seconds;\r\n  }\r\n\r\n  /**\r\n   * Helper method to parse JWT\r\n   * @param {string} token JWT\r\n   * @returns {any} Object\r\n   */\r\n  public parseJwt(token): any {\r\n    const base64Url = token.split('.')[1];\r\n    const base64 = base64Url.replace('-', '+').replace('_', '/');\r\n    return JSON.parse(window.atob(base64));\r\n  }\r\n}\r\n\r\n\r\n","/**\r\n * Barrel for all the services in this folder\r\n */\r\nexport * from './auth.service';\r\nexport * from './client-app.service';\r\nexport * from './fhir-server.service';\r\nexport * from './global.service';\r\nexport * from './helper.service';\r\nexport * from './smart.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject, ReplaySubject } from 'rxjs';\r\nimport { GlobalService } from './global.service';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { timer } from 'rxjs/observable/timer';\r\nimport { HelperService } from './helper.service';\r\n\r\n/**\r\n * Service which encapsulates the SMART on FHIR JS client and exposes methods to get an instance of the SMART Client\r\n * and perform API operations it.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SmartService {\r\n\r\n  /**\r\n   * Cached copy of the SMART client\r\n   */\r\n  private _smartClient: any = null;\r\n  private _smartClientSubject = new ReplaySubject<any>(1);\r\n\r\n  /**\r\n   * Cached copy of the Server Conformance(Capability statement)\r\n   */\r\n  private _conformance: any = null;\r\n  private _conformanceSubject = new ReplaySubject<any>(1);\r\n\r\n  /**\r\n   * Cached copy of the Current AccessToken\r\n   */\r\n  private _accessToken: any;\r\n  private _accessTokenValidityLeft = new ReplaySubject<Number>(1);\r\n\r\n  /**\r\n   * Flag used to identify, whether there is already an FHIR request to fetch the capability statment in progress.\r\n   */\r\n  private _conformanceRequestInProgress: boolean;\r\n\r\n  constructor(private _globalService: GlobalService, private _http: HttpClient, private _helperService: HelperService) { }\r\n\r\n  /**\r\n   * The callback function which is called when a SMART client is ready to be used by the client application.\r\n   * THe SMART on FHIR JS client library FHIR.oauth2.ready() method will take care of\r\n   * 1. fetching the access_token if the OAuth2.0 authorization flow is progress\r\n   * 2. Intitialize the SMART Client with the current state of the application\r\n   * (Client application configuration, Server configuration, Access Token, Scopes etc)\r\n   */\r\n  oauth2ReadyCallback = (smartClient: FHIR.SMART.SMARTClient) => {\r\n    if (!this._smartClient) {\r\n      this._smartClient = smartClient;\r\n      this._smartClientSubject.next(smartClient);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The callback function called when a SMART client is not initialized correctly\r\n   */\r\n  oauth2ReadyErrback = (error: any) => {\r\n    // this._globalService.setError({ error: error });\r\n  }\r\n\r\n  /**\r\n   * @returns {Observable<FHIR.SMART.SMARTClient>} Get a SMART on FHIR client using which the application can perform API calls\r\n   *  and retrive state information.\r\n   */\r\n  public getClient(): Observable<FHIR.SMART.SMARTClient> {\r\n    FHIR.oauth2.ready(this.oauth2ReadyCallback, this.oauth2ReadyErrback);\r\n    return this._smartClientSubject.asObservable();\r\n  }\r\n\r\n\r\n  /**\r\n   * Method to reset the cached SMART client cached in the service.\r\n   * eg. When the refresh token workflow is completed\r\n   */\r\n  public resetClient() {\r\n    this._smartClientSubject = new ReplaySubject<any>(0);\r\n    this._smartClient = null;\r\n  }\r\n\r\n  /**\r\n   * Callback method called once a SMART client is initialized. (Used by the getConformance method)\r\n   * Used only if for some reason, the SMART Client was not initialized when the getConformance method is called.\r\n   */\r\n  private _oauth2ReadyCallbackConformance = (smartClient: FHIR.SMART.SMARTClient) => {\r\n    this._conformanceRequestInProgress = true;\r\n    this._smartClient.api.conformance({}).then(response => {\r\n      this._conformance = response.data;\r\n      this._conformanceRequestInProgress = false;\r\n      this._conformanceSubject.next(response.data);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method to get the Capability statement of the SMART on FHIR in context\r\n   */\r\n  public getConformance(): Observable<any> {\r\n    // If there is a request which is already in progress, we will avoid duplicate requests\r\n    if (!this._conformanceRequestInProgress) {\r\n      this._conformanceRequestInProgress = true;\r\n      // If its already cached, use that\r\n      if (!this._conformance && this._smartClient) {\r\n        this._smartClient.api.conformance({}).then(response => {\r\n          this._conformance = response.data;\r\n          this._conformanceRequestInProgress = false;\r\n          this._conformanceSubject.next(response.data);\r\n        });\r\n      }\r\n      // If cache is empty and the SMART client is not initialized\r\n      if (!this._conformance && !this._smartClient) {\r\n        FHIR.oauth2.ready(this._oauth2ReadyCallbackConformance, this.oauth2ReadyErrback);\r\n      }\r\n    }\r\n    return this._conformanceSubject.asObservable();\r\n  }\r\n\r\n\r\n  /**\r\n   * Method which makes the OAuth2.0 refresh_token call and updates the access token in context.\r\n   * @param smartClient SMART Client in context\r\n   */\r\n  private _refreshAccessToken(smartClient: FHIR.SMART.SMARTClient): any {\r\n    const token_uri = smartClient.state.provider.oauth2.token_uri;\r\n    const headers: any = {\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n      'Accept': 'application/json, text/javascript, */*;'\r\n    };\r\n    if (smartClient.state.client.secret) {\r\n      const authHeader = 'Basic ' + btoa(smartClient.state.client.client_id + ':' + smartClient.state.client.secret);\r\n      headers['Authorization'] = authHeader;\r\n    }\r\n    const httpHeaders: HttpHeaders = new HttpHeaders(headers);\r\n    const httpOptions = {\r\n      headers: httpHeaders\r\n    };\r\n    const refresh_token = this.getRefreshToken();\r\n    const params: any = {\r\n      'grant_type': 'refresh_token',\r\n      'refresh_token': refresh_token\r\n    };\r\n    const bodyParams = Object.keys(params).map((key) => {\r\n      return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n    }).join('&');\r\n\r\n    // Calling the Token endpoint to get the refresh token using the Angular HttpClient, since the SMART on FHIR JS client\r\n    // does not provide a method\r\n    this._http.post<any>(token_uri, bodyParams, httpOptions).subscribe(response => {\r\n      const existingTokenRespsonse = smartClient.tokenResponse;\r\n      existingTokenRespsonse.access_token = response.access_token;\r\n      // The new tokenResponse is updated in the SessionStorage. The SMART on FHIR JS client makes use of this.\r\n      sessionStorage.setItem('tokenResponse', JSON.stringify(existingTokenRespsonse));\r\n      const expiresIn = existingTokenRespsonse.expires_in;\r\n      const currentDate = new Date();\r\n      const expiresOn = new Date();\r\n      expiresOn.setSeconds(currentDate.getSeconds() + expiresIn);\r\n      // Storing till when the access token is valid in SessionStorage, which will be used to display the countdown timer\r\n      sessionStorage.setItem('tokenExpiresOn', expiresOn.toString());\r\n      this.resetClient();\r\n    }, error => {\r\n      this._globalService.setError({ error: error });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback method used if the SMART Client is not initialized and the SMART OAuth ready method is called\r\n   */\r\n  oauth2ReadyCallbackRefreshToken = (smartClient: FHIR.SMART.SMARTClient) => {\r\n    this._refreshAccessToken(smartClient);\r\n  }\r\n\r\n\r\n  /**\r\n   * Method to initiate an OAuth2.0 Refresh Token call\r\n   */\r\n  public refreshAccessToken() {\r\n    if (!this._smartClient) {\r\n      FHIR.oauth2.ready(this.oauth2ReadyCallbackRefreshToken, this.oauth2ReadyErrback);\r\n    } else {\r\n      this._refreshAccessToken(this._smartClient);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the refresh_token from the Token Response, if it exists\r\n   */\r\n  getRefreshToken() {\r\n    const tokenResponse = sessionStorage.getItem('tokenResponse');\r\n    if (tokenResponse) {\r\n      const token = JSON.parse(tokenResponse);\r\n      if (token.refresh_token) {\r\n        return token.refresh_token;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to find the AccessToken Expiry\r\n   * @returns {Observable<Number>} Number of seconds left for the access token to expire\r\n   */\r\n  getTimeLeft(): Observable<Number> {\r\n    // Makes use of the Observable timer to check every second if the token has expired and notifies the subscriber.\r\n    const timerObservable = timer(0, 1000);\r\n    timerObservable.subscribe(x => {\r\n      const tokenResponse = sessionStorage.getItem('tokenResponse');\r\n      const tokenExpiresOn = sessionStorage.getItem('tokenExpiresOn');\r\n      if (!tokenExpiresOn) {\r\n        if (tokenResponse) {\r\n          const token = JSON.parse(tokenResponse);\r\n          const accessToken = token.access_token;\r\n          if (accessToken) {\r\n            if (accessToken !== this._accessToken) {\r\n              this._accessToken = accessToken;\r\n              const expiresIn = token.expires_in;\r\n              const currentDate = new Date();\r\n              const expiresOn = new Date();\r\n              expiresOn.setSeconds(currentDate.getSeconds() + expiresIn);\r\n              sessionStorage.setItem('tokenExpiresOn', expiresOn.toString());\r\n              const seconds = this._helperService.howLong(expiresOn);\r\n              this._accessTokenValidityLeft.next(seconds);\r\n            }\r\n          }\r\n        } else {\r\n          this._accessTokenValidityLeft.next(0);\r\n        }\r\n      } else {\r\n        const getDiff = this._helperService.howLong(new Date(tokenExpiresOn));\r\n        if (getDiff >= 0) {\r\n          this._accessTokenValidityLeft.next(getDiff);\r\n        }\r\n      }\r\n    });\r\n    return this._accessTokenValidityLeft.asObservable();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}